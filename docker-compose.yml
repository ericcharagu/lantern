version: "3.8"
services:
  llm_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: llm_server
    depends_on:
      yolo_service:
        condition: service_healthy
      ollama:
        condition: service_healthy
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
    volumes:
      - ./:/app #removed during prod
      - ./logs:/app/logs
    restart: unless-stopped
    env_file:
      - .env
    secrets:
      - postgres_secrets
      - camera_secrets
      - request_secrets
    networks:
      - llm_network
    ports:
      - "8000:8000"

  yolo_service:
    image: ultralytics/ultralytics:latest
    container_name: yolo_server
    working_dir: /app
    command: >
      bash -c "pip install -r /app/requirements.txt &&
               python -m uvicorn yolo_app:app --host 0.0.0.0 --port 5000 --reload"
    ports:
      - "5000:5000"
    volumes:
      # Mount our service code into the container
      - ./yolo_service:/app
      # Mount the model file separately into a specific directory
      - ./yolo11l.pt:/app/models/yolo11l.pt:Z
    restart: unless-stopped
    networks:
      - llm_network
    # Add a healthcheck to ensure the service is running before the main app depends on it
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 600s
      timeout: 10s
      retries: 5
  ollama:
    image: ollama/ollama:latest
    container_name: ollama_server
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    entrypoint: >
      sh -c "
        ollama serve &
        sleep 5 &&
        ollama pull qwen3:0.6b &&
        tail -f /dev/null
      "
    networks:
      - llm_network

  postgres:
    image: docker.io/library/postgres:17.5-alpine
    container_name: db_server
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_secrets
    secrets:
      - postgres_secrets
    user: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - llm_network

  valkey:
    image: valkey/valkey:8.1-alpine
    container_name: cache_server
    ports:
      - "6379:6379"
    volumes:
      - cache_data:/data
    networks:
      - llm_network
networks:
  llm_network:
    driver: bridge

volumes:
  ollama_data:
  postgres_data:
  cache_data:

secrets:
  postgres_secrets:
    file: ./secrets/postgres_secrets.txt
  whatsapp_secrets:
    file: ./secrets/whatsapp_secrets.txt
  request_secrets:
    file: ./secrets/request_secrets.txt
  camera_secrets:
    file: ./secrets/camera_login_secrets.txt
